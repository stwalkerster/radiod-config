services:
  icecast:
    image: pltnk/icecast2
    restart: "unless-stopped"
    volumes:
      - ./icecast.xml:/etc/icecast2/icecast.xml
      - ./bundle.pem:/usr/share/icecast2/icecast.pem
      - ./logs:/var/log/icecast2
      - ./intros:/usr/share/icecast2/web/intros
    networks:
      internal:
    ports:
      - 8000:8000
      - 8443:8443

  liquidsoap:
    image: ghcr.io/stwalkerster/radiod-liquidsoap-docker:0.7
    restart: "unless-stopped"
    volumes:
      - ./script.liq:/script.liq
      - ./media/jingles:/var/jingles:ro
      - music:/var/music:ro
      - ./media/playlists:/var/playlists:ro
      - ./media/music-local:/var/music-local:ro
      - ./media/scotrail/announcements:/var/announcements:ro
      - ./announcement-generator:/opt/announcement-generator:ro
    ports:
      - 8080:8080
    command: ['/script.liq']
    networks:
      internal:
    secrets:
      - stream-credentials
    environment:
      STREAM_NAME: radio
      STREAM_HOST: icecast

  silence:
    image: git.scimonshouse.net/docker/ffmpeg
    restart: "unless-stopped"
    volumes:
      - ./silence.sh:/silence.sh:ro
    command: ['/silence.sh']
    networks:
      internal:
    secrets:
      - stream-credentials
    environment:
      STREAM_NAME: fallback
      STREAM_HOST: icecast
    logging:
      driver: none

  sidecar:
    image: ghcr.io/stwalkerster/radiod:sidecar
    restart: "unless-stopped"
    volumes:
      - ./sidecar.yml:/opt/config.yml
    networks:
      internal:
      ingress:
        aliases:
          - stream-sidecar

  bot:
    image: ghcr.io/stwalkerster/radiod:bot
    restart: "unless-stopped"
    volumes:
      - ./aws-config:/opt/.aws/config
      - ./bot.yml:/opt/config.yml
      - ./radiod.pfx:/opt/radiod.pfx
    networks:
      internal:
      ingress:
        aliases:
          - stream-bot
    secrets:
      - aws-role-cert
      - aws-role-ca
      - aws-role-key

  metadata:
    image: ghcr.io/stwalkerster/radiod:metadata
    volumes:
      - ./logs:/var/log/icecast2:ro
      - ./metadata.yml:/opt/config.yml
    networks:
      internal:
      ingress:
        aliases:
          - stream-metadata

volumes:
  music:
    driver_opts:
      type: nfs
      o: "nfsvers=4,addr=192.168.32.250,nolock,soft,ro"
      device: ":/srv/samba/music/share"

networks:
  internal:
  ingress:
    external: true
    name: internet-ingress

secrets:
  stream-credentials:
    file: stream-credentials.txt
  aws-role-cert:
    file: certificate.pem
  aws-role-ca:
    file: issuing_ca.pem
  aws-role-key:
    file: private_key.pem
